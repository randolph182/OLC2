// jar en la pagina -> http://www2.cs.tum.edu/projects/cup/
package analizadores.GXML;
import java_cup.runtime.*;
import java.util.LinkedList;

// ************** importaciones de las clases que se utilizaran en el analisis *********
import FuncionScript.Entorno.*;
import GenericXML.*;
import GenericXML.ErroresGXML.*;
parser code
{:

    public AST ast;
    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico en la Línea " + s.left +" Columna "+(s.right+1)+ ". Identificador "
        +s.value + " no reconocido." );
        ManejadorErroresGXML.getInstance().setErrorSintactico(s.left,s.right+1, "problemas con el caracter = " + s.value);
    }
         /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico en la Línea " + (s.right+1)+ " Columna "+s.left+". Identificador " +
        s.value + " no reconocido.");   
    }
    

:}
/* =========================== DECLARACION DE TERMINALES Y NO TERMINALES =========================*/
terminal String tCad,tTexto,tNumerico;
terminal String res_MenorQue,res_MayorQue,res_importar,res_slash;
terminal String res_ventana,res_id,res_Igual,res_tipo,res_color,res_accionInicial,res_accionFinal,res_llvOpen,res_llvClose;
terminal String res_contenedor,res_x,res_y,res_alto,res_ancho,res_borde,res_verdadero,res_falso;
terminal String res_texto,res_nombre,res_fuente,res_tam,res_negrita,res_cursiva;
terminal String res_control,res_maximo,res_minimo,res_accion;
terminal String res_listaDatos,res_dato,res_defecto,res_multimedia,res_boton,res_referencia,res_enviar,res_path,res_auto_reproduccion;

non terminal S;
non terminal LinkedList<nodoAST> LISTADO_ETIQUETAS;
non terminal nodoAST ETIQUETAS;
non terminal Importar ETQ_IMPORTAR;
non terminal Ventana ETQ_VENTANA;
non terminal Simbolo ELEMENTO_VENTANA;
non terminal LinkedList<Simbolo> ELEMENTOS_VENTANA;
non terminal Simbolo ELEMENTO_ID;
non terminal Simbolo ELEMENTO_TIPO;
non terminal Simbolo ELEMENTO_COLOR;
non terminal Simbolo ELEMENTO_ACCION_INICIAL;
non terminal Simbolo ELEMENTO_ACCION_FINAL;
non terminal Contenedor ETQ_CONTENEDOR;
non terminal LinkedList<Simbolo> ELEMENTOS_CONTENEDOR;
non terminal Simbolo ELEMENTO_CONTENEDOR;
non terminal Simbolo ELEMENTO_X;
non terminal Simbolo ELEMENTO_Y;
non terminal Simbolo ELEMENTO_ALTO;
non terminal Simbolo ELEMENTO_ANCHO;
non terminal Simbolo ELEMENTO_BORDE;
non terminal String BOOLEANO;
non terminal LinkedList<nodoAST> LST_CUERPO_VENTANA;
non terminal nodoAST CUERPO_VENTANA;

non terminal LinkedList<nodoAST> LST_CUERPO_CONTENEDOR;
non terminal nodoAST CUERPO_CONTENEDOR;
non terminal Texto ETQ_TEXTO;
non terminal LinkedList<Simbolo> ELEMENTOS_TEXTO;
non terminal Simbolo ELEMENTO_TEXTO;
non terminal Simbolo ELEMENTO_FUENTE;
non terminal Simbolo ELEMENTO_TAM;
non terminal Simbolo ELEMENTO_NEGRITA;
non terminal Simbolo ELEMENTO_CURSIVA;
non terminal Simbolo ELEMENTO_NOMBRE;
non terminal Simbolo ELEMENTO_MAXIMO;
non terminal Simbolo ELEMENTO_MINIMO;
non terminal Simbolo ELEMENTO_ACCION;
non terminal Controlador ETQ_CONTROL;
non terminal LinkedList<Simbolo> ELEMENTOS_CONTROL;
non terminal Simbolo ELEMENTO_CONTROL;

non terminal LinkedList<Simbolo> LST_CUERPO_CONTROL;
non terminal LinkedList<Simbolo> CUERPO_CONTROL;
non terminal LinkedList<Simbolo> ETQ_LISTA_DATOS;
non terminal LinkedList<Simbolo> LST_ETQS_DATO;
non terminal Simbolo ETQ_DATO;
non terminal Simbolo ETQ_DEFECTO;
non terminal ETQ_MULTIMEDIA;
non terminal ELEMENTOS_MULTIMEDIA;
non terminal ELEMENTO_MULTIMEDIA;
non terminal Boton ETQ_BOTON;
non terminal Object CONTENIDO_BOTON;
non terminal LinkedList<Simbolo> ELEMENTOS_BOTON;
non terminal Simbolo ELEMENTO_BOTON;
non terminal Simbolo ELEMENTO_REFERENCIA;
non terminal ETQ_ENVIAR;
non terminal ELEMENTO_PATH;
non terminal ELEMENTO_AUTO_REPRODUCCION;
non terminal LinkedList<Simbolo> TIPO_CUERPO_CONTROL;
non terminal LinkedList<Simbolo> CUERPO_LD;
/* ******************************************* GRAMATICA **************************************** */
start with S;

S::=     LISTADO_ETIQUETAS:a {:parser.ast = new AST(a);:}
         ;         

LISTADO_ETIQUETAS::= LISTADO_ETIQUETAS:a ETIQUETAS:b {:RESULT = a; RESULT.add(b);:}
                    | ETIQUETAS:a {:RESULT = new LinkedList<>(); RESULT.add(a);:}
                    ;

ETIQUETAS::=       ETQ_IMPORTAR:a {:RESULT = a;:}
                    | ETQ_VENTANA:a {:RESULT = a;:}
                    | error res_MayorQue
                    ;

ETQ_IMPORTAR::= res_MenorQue res_importar res_MayorQue tTexto:t res_MenorQue res_slash res_importar res_MayorQue

             {:RESULT = new Importar(t,tleft);:}

                ;




ETQ_VENTANA::=  res_MenorQue res_ventana ELEMENTOS_VENTANA:a res_MayorQue LST_CUERPO_VENTANA:b res_MenorQue res_slash res_ventana res_MayorQue
                {:RESULT = new Ventana(a,b,aleft); :}
                ;

ELEMENTOS_VENTANA::=    ELEMENTOS_VENTANA:a ELEMENTO_VENTANA:b {:RESULT = a; RESULT.add(b);:}
                        |ELEMENTO_VENTANA:a {:RESULT = new LinkedList<>(); RESULT.add(a);:}
                        ;

ELEMENTO_VENTANA::=     ELEMENTO_ID:a             {:RESULT = a;:}
                        |ELEMENTO_TIPO:a            {:RESULT = a;:}
                        |ELEMENTO_COLOR:a           {:RESULT = a;:}
                        |ELEMENTO_ACCION_INICIAL:a {:RESULT = a;:}
                        |ELEMENTO_ACCION_FINAL:a   {:RESULT = a;:}
                        ;             

LST_CUERPO_VENTANA::=    LST_CUERPO_VENTANA:a CUERPO_VENTANA:b {:RESULT = a; RESULT.add(b);:}
                        | CUERPO_VENTANA:a {: RESULT = new LinkedList<>(); RESULT.add(a);:}
                        ;


CUERPO_VENTANA::=       ETQ_CONTENEDOR:a {:RESULT = a;:}
                        | error res_MayorQue
                        ;                             


ETQ_CONTENEDOR::=    res_MenorQue res_contenedor ELEMENTOS_CONTENEDOR:a res_MayorQue LST_CUERPO_CONTENEDOR:b   res_MenorQue res_slash res_contenedor res_MayorQue
                     {:RESULT = new Contenedor(a,b,aleft);:}
                    ;

ELEMENTOS_CONTENEDOR::=  ELEMENTOS_CONTENEDOR:a ELEMENTO_CONTENEDOR:b  {:RESULT = a; RESULT.add(b);:}
                         |ELEMENTO_CONTENEDOR:a {:RESULT = new LinkedList<>(); RESULT.add(a);:}
                         ;

ELEMENTO_CONTENEDOR::=  ELEMENTO_ID:a{:RESULT=a;:}
                        |ELEMENTO_X:a{:RESULT=a;:}
                        |ELEMENTO_Y:a{:RESULT=a;:}
                        |ELEMENTO_ALTO:a{:RESULT=a;:}
                        |ELEMENTO_ANCHO:a{:RESULT=a;:}
                        |ELEMENTO_COLOR:a{:RESULT=a;:}
                        |ELEMENTO_BORDE:a{:RESULT=a;:}
                        ;


LST_CUERPO_CONTENEDOR::= LST_CUERPO_CONTENEDOR:a CUERPO_CONTENEDOR:b {:RESULT = a;RESULT.add(b);:}
                        |CUERPO_CONTENEDOR:a {:RESULT = new LinkedList<>(); RESULT.add(a);:}
                        ;

CUERPO_CONTENEDOR::=    ETQ_TEXTO:a {:RESULT=a;:}
                        |ETQ_CONTROL:a {:RESULT=a;:}
                        |ETQ_MULTIMEDIA
                        |ETQ_BOTON:a {:RESULT=a;:}
                        |ETQ_ENVIAR
                        | error res_MayorQue
                        ;                     

ETQ_TEXTO::=    res_MenorQue res_texto ELEMENTOS_TEXTO:a res_MayorQue tTexto:tex res_MenorQue res_slash res_texto res_MayorQue 
                {: RESULT = new Texto(a,tex,aleft);:} ;

ELEMENTOS_TEXTO::=  ELEMENTOS_TEXTO:a ELEMENTO_TEXTO:b  {:RESULT = a; RESULT.add(b);:}
                    |ELEMENTO_TEXTO:a {: RESULT = new LinkedList<>(); RESULT.add(a);;:}
                    ;

ELEMENTO_TEXTO::=   ELEMENTO_NOMBRE:a {:RESULT=a;:}
                    | ELEMENTO_X:a {:RESULT=a;:}
                    | ELEMENTO_Y:a {:RESULT=a;:}
                    | ELEMENTO_FUENTE:a {:RESULT=a;:}
                    | ELEMENTO_TAM:a {:RESULT=a;:}
                    | ELEMENTO_NEGRITA:a {:RESULT=a;:}
                    | ELEMENTO_CURSIVA:a {:RESULT=a;:}
                    | ELEMENTO_COLOR:a {:RESULT=a;:}
                    ;

ETQ_CONTROL::=  res_MenorQue res_control  ELEMENTOS_CONTROL:a res_MayorQue TIPO_CUERPO_CONTROL:b   res_slash res_control res_MayorQue   
                {:RESULT = new Controlador(a,b,aleft);:}
                ;

ELEMENTOS_CONTROL::= ELEMENTOS_CONTROL:a ELEMENTO_CONTROL:b {:RESULT = a; RESULT.add(b);:}
                    |ELEMENTO_CONTROL:a {:RESULT = new LinkedList<>(); RESULT.add(a);:}
                    ;

ELEMENTO_CONTROL::= ELEMENTO_TIPO:a {:RESULT=a;:}
                    | ELEMENTO_NOMBRE:a {:RESULT=a;:}
                    | ELEMENTO_X:a {:RESULT=a;:}
                    | ELEMENTO_Y:a {:RESULT=a;:}
                    | ELEMENTO_ALTO:a {:RESULT=a;:}
                    | ELEMENTO_ANCHO:a {:RESULT=a;:}
                    | ELEMENTO_FUENTE:a {:RESULT=a;:}
                    | ELEMENTO_TAM:a {:RESULT=a;:}
                    | ELEMENTO_COLOR:a {:RESULT=a;:}
                    | ELEMENTO_NEGRITA:a {:RESULT=a;:}
                    | ELEMENTO_CURSIVA:a {:RESULT=a;:}
                    | ELEMENTO_MAXIMO:a {:RESULT=a;:}
                    | ELEMENTO_MINIMO:a {:RESULT=a;:}
                    | ELEMENTO_ACCION:a {:RESULT=a;:}
                    ;

TIPO_CUERPO_CONTROL::= LST_CUERPO_CONTROL:a res_MenorQue {:RESULT  = a;:}
                        | res_MenorQue {:RESULT  = new LinkedList<>();:}
                        ;

LST_CUERPO_CONTROL::= LST_CUERPO_CONTROL:a CUERPO_CONTROL:b
                        {:
                            RESULT = a; 
                            for(Simbolo s: b){
                                RESULT.add(s);
                            }
                            :}
                        |CUERPO_CONTROL:a {:RESULT = a;:}
                        ;

CUERPO_CONTROL::=       ETQ_LISTA_DATOS:a {:RESULT = a;:} 
                       | ETQ_DEFECTO:a {:RESULT = new LinkedList<>();RESULT.add(a);:}
                       ;               

ETQ_LISTA_DATOS::= res_MenorQue res_listaDatos res_MayorQue CUERPO_LD:a  res_slash res_listaDatos res_MayorQue
                    {:RESULT = a;:}
                    ;

CUERPO_LD::= LST_ETQS_DATO:a res_MenorQue {:RESULT = a;:}
            |res_MenorQue/*nada*/ {:RESULT = new LinkedList<>();:}
            ;

LST_ETQS_DATO::=  LST_ETQS_DATO:a ETQ_DATO:b {:RESULT = a; RESULT.add(b);:}
                  |ETQ_DATO:a{:RESULT = new LinkedList<>();RESULT.add(a);:}
                  ;

ETQ_DATO::=     res_MenorQue res_dato res_MayorQue tTexto:a res_MenorQue res_slash res_dato res_MayorQue    
                {:RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.DATO);:}
                ;


ETQ_DEFECTO::=  res_MenorQue res_defecto res_MayorQue tTexto:a res_MenorQue res_slash res_defecto res_MayorQue
                {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.DEFECTO);:}
                ;   


ETQ_MULTIMEDIA::= res_MenorQue res_multimedia  ELEMENTOS_MULTIMEDIA res_MayorQue    res_MenorQue res_slash res_multimedia res_MayorQue  
                    ; 

ELEMENTOS_MULTIMEDIA::= ELEMENTOS_MULTIMEDIA ELEMENTO_MULTIMEDIA
                        |ELEMENTO_MULTIMEDIA
                        ;

ELEMENTO_MULTIMEDIA::=  ELEMENTO_TIPO
                        |ELEMENTO_PATH
                        |ELEMENTO_NOMBRE
                        |ELEMENTO_X
                        |ELEMENTO_Y
                        |ELEMENTO_ALTO
                        |ELEMENTO_ANCHO
                        |ELEMENTO_AUTO_REPRODUCCION
                        ;




ETQ_BOTON::=    res_MenorQue res_boton ELEMENTOS_BOTON:a res_MayorQue CONTENIDO_BOTON:b res_MenorQue res_slash res_boton res_MayorQue
                {:RESULT = new Boton(a,b,aleft);:}
                ;                            

CONTENIDO_BOTON::=  ETQ_TEXTO:a {:RESULT = a;:}
                    | tTexto:a  {:RESULT = a;:}
                    ;                

ELEMENTOS_BOTON::=  ELEMENTOS_BOTON:a  ELEMENTO_BOTON:b {:RESULT = a; RESULT.add(b);:}
                    | ELEMENTO_BOTON:a {: RESULT = new LinkedList<>(); RESULT.add(a);:}
                    ;             


ELEMENTO_BOTON::= ELEMENTO_NOMBRE:a {:RESULT=a;:}
                    |ELEMENTO_X:a {:RESULT=a;:}
                    |ELEMENTO_Y:a {:RESULT=a;:}
                    |ELEMENTO_ALTO:a {:RESULT=a;:}
                    |ELEMENTO_ANCHO:a {:RESULT=a;:}
                    |ELEMENTO_REFERENCIA:a {:RESULT=a;:}
                    |ELEMENTO_ACCION:a {:RESULT=a;:}
                    ;


                

ETQ_ENVIAR::=       res_MenorQue res_enviar ELEMENTOS_BOTON res_MayorQue  CONTENIDO_BOTON res_MenorQue res_slash res_enviar res_MayorQue

                    ;                  



ELEMENTO_REFERENCIA::= res_referencia res_Igual tCad:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.REFERENCIA);:}
                        ;    

ELEMENTO_PATH::=    res_path res_Igual tCad:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.PATH);:}
                    ;


ELEMENTO_AUTO_REPRODUCCION::=   res_auto_reproduccion res_Igual BOOLEANO:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.BOOLEAN),Simbolo.ROLGXML.AUTO_REPRODUCCION);:}
                                ;

ELEMENTO_MAXIMO::=  res_maximo res_Igual tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.MAXIMO);:}
                    ;

ELEMENTO_MINIMO::=  res_minimo res_Igual tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.MINIMO);:}
                    ;

ELEMENTO_ACCION::=  res_accion res_Igual res_llvOpen tTexto:a res_llvClose {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.ACCION);:}
                    ;   

ELEMENTO_NOMBRE::=  res_nombre res_Igual tCad:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.NOMBRE);:}
                    ;   

ELEMENTO_FUENTE::=  res_fuente res_Igual tCad:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.FUENTE);:}
                    ;

ELEMENTO_TAM::=     res_tam res_Igual tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.TAMANIO);:}
                    ;

ELEMENTO_NEGRITA::= res_negrita res_Igual BOOLEANO:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.BOOLEAN),Simbolo.ROLGXML.NEGRILLA);:}
                    ;

ELEMENTO_CURSIVA::= res_cursiva res_Igual BOOLEANO:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.BOOLEAN),Simbolo.ROLGXML.CURSIVA);:}
                    ;  

ELEMENTO_ID::=          res_id res_Igual tCad:a  {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.ID);:}
                        ;

ELEMENTO_TIPO::=        res_tipo res_Igual tCad:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.TIPO);:}
                        ;

ELEMENTO_COLOR::=       res_color res_Igual tCad:a  {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.COLOR);:}
                        ;

ELEMENTO_ACCION_INICIAL::=  res_accionInicial res_Igual res_llvOpen tTexto:a res_llvClose
                            {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.ACCION_INICIAL);:}
                            ;

ELEMENTO_ACCION_FINAL::= res_accionFinal res_Igual res_llvOpen  tTexto:a res_llvClose
                            {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.STRING),Simbolo.ROLGXML.ACCION_FINAL);:}
                         ;

ELEMENTO_X::=           res_x res_Igual  tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.X);:}
                        ;              

ELEMENTO_Y::=           res_y res_Igual tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.Y);:}         
                        ;

ELEMENTO_ALTO::=        res_alto res_Igual tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.ALTO);:}
                        ;
ELEMENTO_ANCHO::=       res_ancho res_Igual tNumerico:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.NUMBER),Simbolo.ROLGXML.ANCHO);:}
                        ;

ELEMENTO_BORDE::=       res_borde res_Igual BOOLEANO:a {: RESULT = new  Simbolo(a,a,new Tipo(Tipo.Primitivo.BOOLEAN),Simbolo.ROLGXML.BORDE);:}
                        ;


BOOLEANO::=             res_verdadero:a {:RESULT = a;:}
                        |res_falso:a {:RESULT = a;:}
                        ;                                            