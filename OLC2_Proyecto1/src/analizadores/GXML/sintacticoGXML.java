
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores.GXML;

import java_cup.runtime.*;
import java.util.LinkedList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class sintacticoGXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public sintacticoGXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public sintacticoGXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public sintacticoGXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\053\000\002\002\004\000\002\002\003\000\002\013" +
    "\013\000\002\003\013\000\002\024\004\000\002\024\003" +
    "\000\002\025\003\000\002\025\003\000\002\025\003\000" +
    "\002\025\003\000\002\025\003\000\002\025\003\000\002" +
    "\025\003\000\002\025\003\000\002\026\005\000\002\027" +
    "\005\000\002\030\005\000\002\031\005\000\002\004\013" +
    "\000\002\005\004\000\002\005\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\007\005\000\002" +
    "\010\005\000\002\032\005\000\002\014\004\000\002\014" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\016\005\000\002\017\005\000\002" +
    "\020\005\000\002\021\005\000\002\022\005\000\002\023" +
    "\003\000\002\023\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\135\000\004\021\005\001\002\000\004\002\137\001" +
    "\002\000\004\016\007\001\002\000\004\002\000\001\002" +
    "\000\010\011\016\025\017\026\014\001\002\000\012\011" +
    "\uffea\022\uffea\025\uffea\026\uffea\001\002\000\012\011\uffec" +
    "\022\uffec\025\uffec\026\uffec\001\002\000\012\011\016\022" +
    "\026\025\017\026\014\001\002\000\012\011\uffeb\022\uffeb" +
    "\025\uffeb\026\uffeb\001\002\000\004\020\024\001\002\000" +
    "\012\011\uffed\022\uffed\025\uffed\026\uffed\001\002\000\004" +
    "\020\022\001\002\000\004\020\020\001\002\000\004\005" +
    "\021\001\002\000\012\011\uffe8\022\uffe8\025\uffe8\026\uffe8" +
    "\001\002\000\004\005\023\001\002\000\034\011\uffe9\022" +
    "\uffe9\025\uffe9\026\uffe9\027\uffe9\030\uffe9\031\uffe9\032\uffe9" +
    "\033\uffe9\036\uffe9\037\uffe9\040\uffe9\041\uffe9\001\002\000" +
    "\004\005\025\001\002\000\034\011\uffe7\022\uffe7\025\uffe7" +
    "\026\uffe7\027\uffe7\030\uffe7\031\uffe7\032\uffe7\033\uffe7\036" +
    "\uffe7\037\uffe7\040\uffe7\041\uffe7\001\002\000\004\021\031" +
    "\001\002\000\012\011\uffee\022\uffee\025\uffee\026\uffee\001" +
    "\002\000\004\021\133\001\002\000\004\006\032\001\002" +
    "\000\020\011\016\026\014\027\043\030\041\031\035\032" +
    "\050\033\045\001\002\000\022\011\016\022\066\026\014" +
    "\027\043\030\041\031\035\032\050\033\045\001\002\000" +
    "\022\011\uffde\022\uffde\026\uffde\027\uffde\030\uffde\031\uffde" +
    "\032\uffde\033\uffde\001\002\000\004\020\063\001\002\000" +
    "\022\011\uffe2\022\uffe2\026\uffe2\027\uffe2\030\uffe2\031\uffe2" +
    "\032\uffe2\033\uffe2\001\002\000\022\011\uffe3\022\uffe3\026" +
    "\uffe3\027\uffe3\030\uffe3\031\uffe3\032\uffe3\033\uffe3\001\002" +
    "\000\022\011\uffdf\022\uffdf\026\uffdf\027\uffdf\030\uffdf\031" +
    "\uffdf\032\uffdf\033\uffdf\001\002\000\004\020\061\001\002" +
    "\000\022\011\uffe0\022\uffe0\026\uffe0\027\uffe0\030\uffe0\031" +
    "\uffe0\032\uffe0\033\uffe0\001\002\000\004\020\057\001\002" +
    "\000\022\011\uffe1\022\uffe1\026\uffe1\027\uffe1\030\uffe1\031" +
    "\uffe1\032\uffe1\033\uffe1\001\002\000\004\020\053\001\002" +
    "\000\022\011\uffe5\022\uffe5\026\uffe5\027\uffe5\030\uffe5\031" +
    "\uffe5\032\uffe5\033\uffe5\001\002\000\022\011\uffe4\022\uffe4" +
    "\026\uffe4\027\uffe4\030\uffe4\031\uffe4\032\uffe4\033\uffe4\001" +
    "\002\000\004\020\051\001\002\000\004\004\052\001\002" +
    "\000\022\011\uffda\022\uffda\026\uffda\027\uffda\030\uffda\031" +
    "\uffda\032\uffda\033\uffda\001\002\000\006\034\055\035\054" +
    "\001\002\000\032\011\uffd7\022\uffd7\026\uffd7\027\uffd7\030" +
    "\uffd7\031\uffd7\032\uffd7\033\uffd7\036\uffd7\037\uffd7\040\uffd7" +
    "\041\uffd7\001\002\000\032\011\uffd8\022\uffd8\026\uffd8\027" +
    "\uffd8\030\uffd8\031\uffd8\032\uffd8\033\uffd8\036\uffd8\037\uffd8" +
    "\040\uffd8\041\uffd8\001\002\000\022\011\uffd9\022\uffd9\026" +
    "\uffd9\027\uffd9\030\uffd9\031\uffd9\032\uffd9\033\uffd9\001\002" +
    "\000\004\004\060\001\002\000\032\011\uffdd\022\uffdd\026" +
    "\uffdd\027\uffdd\030\uffdd\031\uffdd\032\uffdd\033\uffdd\036\uffdd" +
    "\037\uffdd\040\uffdd\041\uffdd\001\002\000\004\004\062\001" +
    "\002\000\032\011\uffdc\022\uffdc\026\uffdc\027\uffdc\030\uffdc" +
    "\031\uffdc\032\uffdc\033\uffdc\036\uffdc\037\uffdc\040\uffdc\041" +
    "\uffdc\001\002\000\004\004\064\001\002\000\022\011\uffdb" +
    "\022\uffdb\026\uffdb\027\uffdb\030\uffdb\031\uffdb\032\uffdb\033" +
    "\uffdb\001\002\000\022\011\uffe6\022\uffe6\026\uffe6\027\uffe6" +
    "\030\uffe6\031\uffe6\032\uffe6\033\uffe6\001\002\000\004\021" +
    "\070\001\002\000\004\021\127\001\002\000\004\007\071" +
    "\001\002\000\022\011\016\026\014\027\043\030\041\036" +
    "\106\037\100\040\105\041\072\001\002\000\004\020\125" +
    "\001\002\000\024\011\ufffc\022\ufffc\026\ufffc\027\ufffc\030" +
    "\ufffc\036\ufffc\037\ufffc\040\ufffc\041\ufffc\001\002\000\024" +
    "\011\016\022\117\026\014\027\043\030\041\036\106\037" +
    "\100\040\105\041\072\001\002\000\024\011\ufff9\022\ufff9" +
    "\026\ufff9\027\ufff9\030\ufff9\036\ufff9\037\ufff9\040\ufff9\041" +
    "\ufff9\001\002\000\024\011\ufffb\022\ufffb\026\ufffb\027\ufffb" +
    "\030\ufffb\036\ufffb\037\ufffb\040\ufffb\041\ufffb\001\002\000" +
    "\024\011\ufffa\022\ufffa\026\ufffa\027\ufffa\030\ufffa\036\ufffa" +
    "\037\ufffa\040\ufffa\041\ufffa\001\002\000\004\020\114\001" +
    "\002\000\024\011\ufff5\022\ufff5\026\ufff5\027\ufff5\030\ufff5" +
    "\036\ufff5\037\ufff5\040\ufff5\041\ufff5\001\002\000\024\011" +
    "\ufff6\022\ufff6\026\ufff6\027\ufff6\030\ufff6\036\ufff6\037\ufff6" +
    "\040\ufff6\041\ufff6\001\002\000\024\011\ufff7\022\ufff7\026" +
    "\ufff7\027\ufff7\030\ufff7\036\ufff7\037\ufff7\040\ufff7\041\ufff7" +
    "\001\002\000\024\011\ufff4\022\ufff4\026\ufff4\027\ufff4\030" +
    "\ufff4\036\ufff4\037\ufff4\040\ufff4\041\ufff4\001\002\000\004" +
    "\020\112\001\002\000\004\020\110\001\002\000\024\011" +
    "\ufff8\022\ufff8\026\ufff8\027\ufff8\030\ufff8\036\ufff8\037\ufff8" +
    "\040\ufff8\041\ufff8\001\002\000\004\005\111\001\002\000" +
    "\024\011\ufff3\022\ufff3\026\ufff3\027\ufff3\030\ufff3\036\ufff3" +
    "\037\ufff3\040\ufff3\041\ufff3\001\002\000\006\034\055\035" +
    "\054\001\002\000\024\011\ufff1\022\ufff1\026\ufff1\027\ufff1" +
    "\030\ufff1\036\ufff1\037\ufff1\040\ufff1\041\ufff1\001\002\000" +
    "\004\004\115\001\002\000\024\011\ufff2\022\ufff2\026\ufff2" +
    "\027\ufff2\030\ufff2\036\ufff2\037\ufff2\040\ufff2\041\ufff2\001" +
    "\002\000\024\011\ufffd\022\ufffd\026\ufffd\027\ufffd\030\ufffd" +
    "\036\ufffd\037\ufffd\040\ufffd\041\ufffd\001\002\000\004\024" +
    "\120\001\002\000\004\021\121\001\002\000\004\017\122" +
    "\001\002\000\004\007\123\001\002\000\004\022\124\001" +
    "\002\000\004\021\ufffe\001\002\000\006\034\055\035\054" +
    "\001\002\000\024\011\ufff0\022\ufff0\026\ufff0\027\ufff0\030" +
    "\ufff0\036\ufff0\037\ufff0\040\ufff0\041\ufff0\001\002\000\004" +
    "\017\130\001\002\000\004\006\131\001\002\000\004\022" +
    "\132\001\002\000\004\021\uffff\001\002\000\004\017\134" +
    "\001\002\000\004\016\135\001\002\000\004\022\136\001" +
    "\002\000\004\002\uffef\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\135\000\006\002\003\004\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\005\011" +
    "\006\014\007\010\010\012\032\007\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\006\026\007\010\010\012" +
    "\032\007\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\007\046\014\032\015\045\016\036\017\035" +
    "\020\043\021\041\022\033\032\037\001\001\000\022\007" +
    "\046\015\064\016\036\017\035\020\043\021\041\022\033" +
    "\032\037\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\055\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\066\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\007\075\016\076" +
    "\017\074\024\073\025\072\026\106\027\102\030\101\031" +
    "\100\032\103\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\007\075\016\076\017\074\025\115\026\106\027" +
    "\102\030\101\031\100\032\103\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\112" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\125\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintacticoGXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintacticoGXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintacticoGXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico en la Línea " + s.left +" Columna "+(s.right+1)+ ". Identificador "
        +s.value + " no reconocido." );
    }
         /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico en la Línea " + (s.right+1)+ " Columna "+s.left+". Identificador " +
        s.value + " no reconocido.");   
	}
    



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$sintacticoGXML$actions {
  private final sintacticoGXML parser;

  /** Constructor */
  CUP$sintacticoGXML$actions(sintacticoGXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$sintacticoGXML$do_action_part00000000(
    int                        CUP$sintacticoGXML$act_num,
    java_cup.runtime.lr_parser CUP$sintacticoGXML$parser,
    java.util.Stack            CUP$sintacticoGXML$stack,
    int                        CUP$sintacticoGXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintacticoGXML$result;

      /* select the action based on the action number */
      switch (CUP$sintacticoGXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= S EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)).value;
		RESULT = start_val;
              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$sintacticoGXML$parser.done_parsing();
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // S ::= ETQ_VENTANA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("S",0, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ETQ_CONTENEDOR ::= res_MenorQue res_contenedor ELEMENTOS_CONTENEDOR res_MayorQue ETQ_TEXTO res_MenorQue res_slash res_contenedor res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_CONTENEDOR",9, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ETQ_TEXTO ::= res_MenorQue res_texto ELEMENTOS_TEXTO res_MayorQue tTexto res_MenorQue res_slash res_texto res_MayorQue 
            {
              Object RESULT =null;
		int texleft = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)).left;
		int texright = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)).right;
		String tex = (String)((java_cup.runtime.Symbol) CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)).value;
		 System.out.println(tex);
              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_TEXTO",1, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ELEMENTOS_TEXTO ::= ELEMENTOS_TEXTO ELEMENTO_TEXTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_TEXTO",18, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ELEMENTOS_TEXTO ::= ELEMENTO_TEXTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_TEXTO",18, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ELEMENTO_TEXTO ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ELEMENTO_TEXTO ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ELEMENTO_TEXTO ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ELEMENTO_TEXTO ::= ELEMENTO_FUENTE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ELEMENTO_TEXTO ::= ELEMENTO_TAM 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ELEMENTO_TEXTO ::= ELEMENTO_NEGRITA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ELEMENTO_TEXTO ::= ELEMENTO_CURSIVA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ELEMENTO_TEXTO ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ELEMENTO_FUENTE ::= res_fuente res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_FUENTE",20, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ELEMENTO_TAM ::= res_tam res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TAM",21, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ELEMENTO_NEGRITA ::= res_negrita res_Igual BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_NEGRITA",22, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ELEMENTO_CURSIVA ::= res_cursiva res_Igual BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CURSIVA",23, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ETQ_VENTANA ::= res_MenorQue res_ventana ELEMENTOS_VENTANA res_MayorQue ETQ_CONTENEDOR res_MenorQue res_slash res_ventana res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_VENTANA",2, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ELEMENTOS_VENTANA ::= ELEMENTOS_VENTANA ELEMENTO_VENTANA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_VENTANA",3, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ELEMENTOS_VENTANA ::= ELEMENTO_VENTANA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_VENTANA",3, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ELEMENTO_VENTANA ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ELEMENTO_VENTANA ::= ELEMENTO_TIPO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ELEMENTO_VENTANA ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ELEMENTO_ID ::= res_id res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ID",5, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ELEMENTO_TIPO ::= res_tipo res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TIPO",6, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ELEMENTO_COLOR ::= res_color res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_COLOR",24, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ELEMENTOS_CONTENEDOR ::= ELEMENTOS_CONTENEDOR ELEMENTO_CONTENEDOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_CONTENEDOR",10, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ELEMENTOS_CONTENEDOR ::= ELEMENTO_CONTENEDOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_CONTENEDOR",10, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ELEMENTO_CONTENEDOR ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ELEMENTO_CONTENEDOR ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ELEMENTO_CONTENEDOR ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ELEMENTO_CONTENEDOR ::= ELEMENTO_ALTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ELEMENTO_CONTENEDOR ::= ELEMENTO_ANCHO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ELEMENTO_CONTENEDOR ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ELEMENTO_CONTENEDOR ::= ELEMENTO_BORDE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ELEMENTO_X ::= res_x res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_X",12, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ELEMENTO_Y ::= res_y res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_Y",13, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ELEMENTO_ALTO ::= res_alto res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ALTO",14, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ELEMENTO_ANCHO ::= res_ancho res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ANCHO",15, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ELEMENTO_BORDE ::= res_borde res_Igual BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BORDE",16, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // BOOLEANO ::= res_verdadero 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("BOOLEANO",17, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // BOOLEANO ::= res_falso 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("BOOLEANO",17, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$sintacticoGXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$sintacticoGXML$do_action(
    int                        CUP$sintacticoGXML$act_num,
    java_cup.runtime.lr_parser CUP$sintacticoGXML$parser,
    java.util.Stack            CUP$sintacticoGXML$stack,
    int                        CUP$sintacticoGXML$top)
    throws java.lang.Exception
    {
              return CUP$sintacticoGXML$do_action_part00000000(
                               CUP$sintacticoGXML$act_num,
                               CUP$sintacticoGXML$parser,
                               CUP$sintacticoGXML$stack,
                               CUP$sintacticoGXML$top);
    }
}

}
