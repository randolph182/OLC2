
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores.GXML;

import java_cup.runtime.*;
import java.util.LinkedList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class sintacticoGXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public sintacticoGXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public sintacticoGXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public sintacticoGXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\153\000\002\002\004\000\002\002\003\000\002\013" +
    "\013\000\002\041\004\000\002\041\003\000\002\042\003" +
    "\000\002\042\003\000\002\042\003\000\002\042\003\000" +
    "\002\042\003\000\002\003\013\000\002\024\004\000\002" +
    "\024\003\000\002\025\003\000\002\025\003\000\002\025" +
    "\003\000\002\025\003\000\002\025\003\000\002\025\003" +
    "\000\002\025\003\000\002\025\003\000\002\026\005\000" +
    "\002\027\005\000\002\030\005\000\002\031\005\000\002" +
    "\033\013\000\002\034\004\000\002\034\003\000\002\035" +
    "\003\000\002\035\003\000\002\035\003\000\002\035\003" +
    "\000\002\035\003\000\002\035\003\000\002\035\003\000" +
    "\002\035\003\000\002\035\003\000\002\035\003\000\002" +
    "\035\003\000\002\035\003\000\002\035\003\000\002\035" +
    "\003\000\002\036\005\000\002\037\005\000\002\040\007" +
    "\000\002\004\013\000\002\005\004\000\002\005\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\006\003\000\002\011\007\000\002\012" +
    "\007\000\002\007\005\000\002\010\005\000\002\032\005" +
    "\000\002\014\004\000\002\014\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\016" +
    "\005\000\002\017\005\000\002\020\005\000\002\021\005" +
    "\000\002\022\005\000\002\023\003\000\002\023\003\000" +
    "\002\045\004\000\002\045\003\000\002\043\012\000\002" +
    "\044\012\000\002\046\012\000\002\047\012\000\002\050" +
    "\004\000\002\050\003\000\002\051\003\000\002\051\003" +
    "\000\002\051\003\000\002\051\003\000\002\051\003\000" +
    "\002\051\003\000\002\051\003\000\002\051\003\000\002" +
    "\052\005\000\002\053\005\000\002\054\003\000\002\055" +
    "\013\000\002\056\003\000\002\056\003\000\002\057\004" +
    "\000\002\057\003\000\002\060\003\000\002\060\003\000" +
    "\002\060\003\000\002\060\003\000\002\060\003\000\002" +
    "\060\003\000\002\060\003\000\002\061\005\000\002\062" +
    "\013" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\316\000\004\021\005\001\002\000\004\002\320\001" +
    "\002\000\004\016\007\001\002\000\004\002\000\001\002" +
    "\000\014\011\017\025\010\026\020\047\023\050\016\001" +
    "\002\000\004\020\316\001\002\000\016\011\uffd2\022\uffd2" +
    "\025\uffd2\026\uffd2\047\uffd2\050\uffd2\001\002\000\016\011" +
    "\uffce\022\uffce\025\uffce\026\uffce\047\uffce\050\uffce\001\002" +
    "\000\016\011\uffcf\022\uffcf\025\uffcf\026\uffcf\047\uffcf\050" +
    "\uffcf\001\002\000\016\011\uffd0\022\uffd0\025\uffd0\026\uffd0" +
    "\047\uffd0\050\uffd0\001\002\000\016\011\uffcd\022\uffcd\025" +
    "\uffcd\026\uffcd\047\uffcd\050\uffcd\001\002\000\004\020\312" +
    "\001\002\000\004\020\310\001\002\000\004\020\306\001" +
    "\002\000\016\011\017\022\031\025\010\026\020\047\023" +
    "\050\016\001\002\000\016\011\uffd1\022\uffd1\025\uffd1\026" +
    "\uffd1\047\uffd1\050\uffd1\001\002\000\004\020\024\001\002" +
    "\000\004\045\025\001\002\000\004\024\026\001\002\000" +
    "\004\046\027\001\002\000\016\011\uffcc\022\uffcc\025\uffcc" +
    "\026\uffcc\047\uffcc\050\uffcc\001\002\000\016\011\uffd3\022" +
    "\uffd3\025\uffd3\026\uffd3\047\uffd3\050\uffd3\001\002\000\004" +
    "\021\033\001\002\000\004\021\302\001\002\000\004\006" +
    "\034\001\002\000\020\011\017\026\020\027\045\030\043" +
    "\031\037\032\052\033\047\001\002\000\022\011\017\022" +
    "\070\026\020\027\045\030\043\031\037\032\052\033\047" +
    "\001\002\000\022\011\uffbf\022\uffbf\026\uffbf\027\uffbf\030" +
    "\uffbf\031\uffbf\032\uffbf\033\uffbf\001\002\000\004\020\065" +
    "\001\002\000\022\011\uffc3\022\uffc3\026\uffc3\027\uffc3\030" +
    "\uffc3\031\uffc3\032\uffc3\033\uffc3\001\002\000\022\011\uffc4" +
    "\022\uffc4\026\uffc4\027\uffc4\030\uffc4\031\uffc4\032\uffc4\033" +
    "\uffc4\001\002\000\022\011\uffc0\022\uffc0\026\uffc0\027\uffc0" +
    "\030\uffc0\031\uffc0\032\uffc0\033\uffc0\001\002\000\004\020" +
    "\063\001\002\000\022\011\uffc1\022\uffc1\026\uffc1\027\uffc1" +
    "\030\uffc1\031\uffc1\032\uffc1\033\uffc1\001\002\000\004\020" +
    "\061\001\002\000\022\011\uffc2\022\uffc2\026\uffc2\027\uffc2" +
    "\030\uffc2\031\uffc2\032\uffc2\033\uffc2\001\002\000\004\020" +
    "\055\001\002\000\022\011\uffc6\022\uffc6\026\uffc6\027\uffc6" +
    "\030\uffc6\031\uffc6\032\uffc6\033\uffc6\001\002\000\022\011" +
    "\uffc5\022\uffc5\026\uffc5\027\uffc5\030\uffc5\031\uffc5\032\uffc5" +
    "\033\uffc5\001\002\000\004\020\053\001\002\000\004\004" +
    "\054\001\002\000\040\011\uffbb\022\uffbb\025\uffbb\026\uffbb" +
    "\027\uffbb\030\uffbb\031\uffbb\032\uffbb\033\uffbb\034\uffbb\035" +
    "\uffbb\044\uffbb\051\uffbb\053\uffbb\054\uffbb\001\002\000\006" +
    "\034\057\035\056\001\002\000\044\011\uffb8\022\uffb8\025" +
    "\uffb8\026\uffb8\027\uffb8\030\uffb8\031\uffb8\032\uffb8\033\uffb8" +
    "\034\uffb8\035\uffb8\036\uffb8\037\uffb8\040\uffb8\041\uffb8\053" +
    "\uffb8\054\uffb8\001\002\000\044\011\uffb9\022\uffb9\025\uffb9" +
    "\026\uffb9\027\uffb9\030\uffb9\031\uffb9\032\uffb9\033\uffb9\034" +
    "\uffb9\035\uffb9\036\uffb9\037\uffb9\040\uffb9\041\uffb9\053\uffb9" +
    "\054\uffb9\001\002\000\022\011\uffba\022\uffba\026\uffba\027" +
    "\uffba\030\uffba\031\uffba\032\uffba\033\uffba\001\002\000\004" +
    "\004\062\001\002\000\050\011\uffbe\022\uffbe\025\uffbe\026" +
    "\uffbe\027\uffbe\030\uffbe\031\uffbe\032\uffbe\033\uffbe\034\uffbe" +
    "\035\uffbe\036\uffbe\037\uffbe\040\uffbe\041\uffbe\044\uffbe\051" +
    "\uffbe\053\uffbe\054\uffbe\001\002\000\004\004\064\001\002" +
    "\000\050\011\uffbd\022\uffbd\025\uffbd\026\uffbd\027\uffbd\030" +
    "\uffbd\031\uffbd\032\uffbd\033\uffbd\034\uffbd\035\uffbd\036\uffbd" +
    "\037\uffbd\040\uffbd\041\uffbd\044\uffbd\051\uffbd\053\uffbd\054" +
    "\uffbd\001\002\000\004\004\066\001\002\000\040\011\uffbc" +
    "\022\uffbc\025\uffbc\026\uffbc\027\uffbc\030\uffbc\031\uffbc\032" +
    "\uffbc\033\uffbc\034\uffbc\035\uffbc\044\uffbc\051\uffbc\053\uffbc" +
    "\054\uffbc\001\002\000\022\011\uffc7\022\uffc7\026\uffc7\027" +
    "\uffc7\030\uffc7\031\uffc7\032\uffc7\033\uffc7\001\002\000\004" +
    "\021\077\001\002\000\004\021\ufff8\001\002\000\004\021" +
    "\ufffa\001\002\000\004\021\ufffc\001\002\000\004\021\ufffb" +
    "\001\002\000\004\021\ufff9\001\002\000\004\021\275\001" +
    "\002\000\014\007\104\010\102\015\103\052\101\055\105" +
    "\001\002\000\004\021\ufffd\001\002\000\024\025\010\027" +
    "\045\030\043\031\037\032\052\034\057\035\056\053\261" +
    "\054\112\001\002\000\004\022\210\001\002\000\020\027" +
    "\045\030\043\031\037\032\052\044\107\051\110\054\112" +
    "\001\002\000\022\011\017\026\020\027\045\030\043\036" +
    "\160\037\152\040\157\041\144\001\002\000\020\027\045" +
    "\030\043\031\037\032\052\044\107\051\110\054\112\001" +
    "\002\000\022\022\uff9a\027\uff9a\030\uff9a\031\uff9a\032\uff9a" +
    "\044\uff9a\051\uff9a\054\uff9a\001\002\000\004\020\140\001" +
    "\002\000\004\020\136\001\002\000\022\022\uff9d\027\uff9d" +
    "\030\uff9d\031\uff9d\032\uff9d\044\uff9d\051\uff9d\054\uff9d\001" +
    "\002\000\004\020\134\001\002\000\022\022\uff9e\027\uff9e" +
    "\030\uff9e\031\uff9e\032\uff9e\044\uff9e\051\uff9e\054\uff9e\001" +
    "\002\000\022\022\123\027\045\030\043\031\037\032\052" +
    "\044\107\051\110\054\112\001\002\000\022\022\uff99\027" +
    "\uff99\030\uff99\031\uff99\032\uff99\044\uff99\051\uff99\054\uff99" +
    "\001\002\000\022\022\uffa0\027\uffa0\030\uffa0\031\uffa0\032" +
    "\uffa0\044\uffa0\051\uffa0\054\uffa0\001\002\000\022\022\uff9b" +
    "\027\uff9b\030\uff9b\031\uff9b\032\uff9b\044\uff9b\051\uff9b\054" +
    "\uff9b\001\002\000\022\022\uff9f\027\uff9f\030\uff9f\031\uff9f" +
    "\032\uff9f\044\uff9f\051\uff9f\054\uff9f\001\002\000\022\022" +
    "\uff9c\027\uff9c\030\uff9c\031\uff9c\032\uff9c\044\uff9c\051\uff9c" +
    "\054\uff9c\001\002\000\022\022\uffa1\027\uffa1\030\uffa1\031" +
    "\uffa1\032\uffa1\044\uffa1\051\uffa1\054\uffa1\001\002\000\006" +
    "\021\126\024\125\001\002\000\004\021\uffa3\001\002\000" +
    "\004\021\uffa2\001\002\000\004\007\104\001\002\000\004" +
    "\021\130\001\002\000\004\017\131\001\002\000\004\055" +
    "\132\001\002\000\004\022\133\001\002\000\004\021\uffa4" +
    "\001\002\000\004\005\135\001\002\000\032\022\uffa6\025" +
    "\uffa6\027\uffa6\030\uffa6\031\uffa6\032\uffa6\034\uffa6\035\uffa6" +
    "\044\uffa6\051\uffa6\053\uffa6\054\uffa6\001\002\000\004\005" +
    "\137\001\002\000\022\022\uff98\027\uff98\030\uff98\031\uff98" +
    "\032\uff98\044\uff98\051\uff98\054\uff98\001\002\000\004\045" +
    "\141\001\002\000\004\024\142\001\002\000\004\046\143" +
    "\001\002\000\022\022\uffd5\027\uffd5\030\uffd5\031\uffd5\032" +
    "\uffd5\044\uffd5\051\uffd5\054\uffd5\001\002\000\004\020\177" +
    "\001\002\000\024\011\ufff5\022\ufff5\026\ufff5\027\ufff5\030" +
    "\ufff5\036\ufff5\037\ufff5\040\ufff5\041\ufff5\001\002\000\024" +
    "\011\017\022\171\026\020\027\045\030\043\036\160\037" +
    "\152\040\157\041\144\001\002\000\024\011\ufff2\022\ufff2" +
    "\026\ufff2\027\ufff2\030\ufff2\036\ufff2\037\ufff2\040\ufff2\041" +
    "\ufff2\001\002\000\024\011\ufff4\022\ufff4\026\ufff4\027\ufff4" +
    "\030\ufff4\036\ufff4\037\ufff4\040\ufff4\041\ufff4\001\002\000" +
    "\024\011\ufff3\022\ufff3\026\ufff3\027\ufff3\030\ufff3\036\ufff3" +
    "\037\ufff3\040\ufff3\041\ufff3\001\002\000\004\020\166\001" +
    "\002\000\024\011\uffee\022\uffee\026\uffee\027\uffee\030\uffee" +
    "\036\uffee\037\uffee\040\uffee\041\uffee\001\002\000\024\011" +
    "\uffef\022\uffef\026\uffef\027\uffef\030\uffef\036\uffef\037\uffef" +
    "\040\uffef\041\uffef\001\002\000\024\011\ufff0\022\ufff0\026" +
    "\ufff0\027\ufff0\030\ufff0\036\ufff0\037\ufff0\040\ufff0\041\ufff0" +
    "\001\002\000\024\011\uffed\022\uffed\026\uffed\027\uffed\030" +
    "\uffed\036\uffed\037\uffed\040\uffed\041\uffed\001\002\000\004" +
    "\020\164\001\002\000\004\020\162\001\002\000\024\011" +
    "\ufff1\022\ufff1\026\ufff1\027\ufff1\030\ufff1\036\ufff1\037\ufff1" +
    "\040\ufff1\041\ufff1\001\002\000\004\005\163\001\002\000" +
    "\024\011\uffec\022\uffec\026\uffec\027\uffec\030\uffec\036\uffec" +
    "\037\uffec\040\uffec\041\uffec\001\002\000\006\034\057\035" +
    "\056\001\002\000\024\011\uffea\022\uffea\026\uffea\027\uffea" +
    "\030\uffea\036\uffea\037\uffea\040\uffea\041\uffea\001\002\000" +
    "\004\004\167\001\002\000\024\011\uffeb\022\uffeb\026\uffeb" +
    "\027\uffeb\030\uffeb\036\uffeb\037\uffeb\040\uffeb\041\uffeb\001" +
    "\002\000\024\011\ufff6\022\ufff6\026\ufff6\027\ufff6\030\ufff6" +
    "\036\ufff6\037\ufff6\040\ufff6\041\ufff6\001\002\000\004\024" +
    "\172\001\002\000\004\021\173\001\002\000\004\017\174" +
    "\001\002\000\004\007\175\001\002\000\004\022\176\001" +
    "\002\000\004\021\ufff7\001\002\000\006\034\057\035\056" +
    "\001\002\000\024\011\uffe9\022\uffe9\026\uffe9\027\uffe9\030" +
    "\uffe9\036\uffe9\037\uffe9\040\uffe9\041\uffe9\001\002\000\022" +
    "\022\202\027\045\030\043\031\037\032\052\044\107\051" +
    "\110\054\112\001\002\000\006\021\126\024\125\001\002" +
    "\000\004\021\204\001\002\000\004\017\205\001\002\000" +
    "\004\015\206\001\002\000\004\022\207\001\002\000\004" +
    "\021\uff97\001\002\000\004\021\211\001\002\000\004\021" +
    "\213\001\002\000\004\021\236\001\002\000\004\013\214" +
    "\001\002\000\004\022\215\001\002\000\004\021\216\001" +
    "\002\000\004\014\224\001\002\000\004\021\uffb6\001\002" +
    "\000\004\021\221\001\002\000\006\014\224\017\223\001" +
    "\002\000\004\021\uffb7\001\002\000\004\013\233\001\002" +
    "\000\004\022\225\001\002\000\004\024\226\001\002\000" +
    "\004\021\227\001\002\000\004\017\230\001\002\000\004" +
    "\014\231\001\002\000\004\022\232\001\002\000\004\021" +
    "\uffb5\001\002\000\004\022\234\001\002\000\004\021\uffb4" +
    "\001\002\000\004\017\246\001\002\000\004\012\237\001" +
    "\002\000\004\022\240\001\002\000\004\024\241\001\002" +
    "\000\004\021\242\001\002\000\004\017\243\001\002\000" +
    "\004\012\244\001\002\000\004\022\245\001\002\000\004" +
    "\017\uffb3\001\002\000\004\010\247\001\002\000\004\022" +
    "\250\001\002\000\004\021\uffe8\001\002\000\026\022\uffad" +
    "\025\uffad\027\uffad\030\uffad\031\uffad\032\uffad\034\uffad\035" +
    "\uffad\053\uffad\054\uffad\001\002\000\026\022\uffa8\025\uffa8" +
    "\027\uffa8\030\uffa8\031\uffa8\032\uffa8\034\uffa8\035\uffa8\053" +
    "\uffa8\054\uffa8\001\002\000\026\022\uffab\025\uffab\027\uffab" +
    "\030\uffab\031\uffab\032\uffab\034\uffab\035\uffab\053\uffab\054" +
    "\uffab\001\002\000\026\022\267\025\010\027\045\030\043" +
    "\031\037\032\052\034\057\035\056\053\261\054\112\001" +
    "\002\000\026\022\uffac\025\uffac\027\uffac\030\uffac\031\uffac" +
    "\032\uffac\034\uffac\035\uffac\053\uffac\054\uffac\001\002\000" +
    "\026\022\uffaf\025\uffaf\027\uffaf\030\uffaf\031\uffaf\032\uffaf" +
    "\034\uffaf\035\uffaf\053\uffaf\054\uffaf\001\002\000\026\022" +
    "\uffa5\025\uffa5\027\uffa5\030\uffa5\031\uffa5\032\uffa5\034\uffa5" +
    "\035\uffa5\053\uffa5\054\uffa5\001\002\000\026\022\uffaa\025" +
    "\uffaa\027\uffaa\030\uffaa\031\uffaa\032\uffaa\034\uffaa\035\uffaa" +
    "\053\uffaa\054\uffaa\001\002\000\004\020\265\001\002\000" +
    "\026\022\uffb0\025\uffb0\027\uffb0\030\uffb0\031\uffb0\032\uffb0" +
    "\034\uffb0\035\uffb0\053\uffb0\054\uffb0\001\002\000\026\022" +
    "\uffae\025\uffae\027\uffae\030\uffae\031\uffae\032\uffae\034\uffae" +
    "\035\uffae\053\uffae\054\uffae\001\002\000\026\022\uffa9\025" +
    "\uffa9\027\uffa9\030\uffa9\031\uffa9\032\uffa9\034\uffa9\035\uffa9" +
    "\053\uffa9\054\uffa9\001\002\000\004\005\266\001\002\000" +
    "\026\022\uffa7\025\uffa7\027\uffa7\030\uffa7\031\uffa7\032\uffa7" +
    "\034\uffa7\035\uffa7\053\uffa7\054\uffa7\001\002\000\004\021" +
    "\271\001\002\000\026\022\uffb1\025\uffb1\027\uffb1\030\uffb1" +
    "\031\uffb1\032\uffb1\034\uffb1\035\uffb1\053\uffb1\054\uffb1\001" +
    "\002\000\004\017\272\001\002\000\004\052\273\001\002" +
    "\000\004\022\274\001\002\000\004\021\uffb2\001\002\000" +
    "\016\007\104\010\102\015\103\017\277\052\101\055\105" +
    "\001\002\000\004\021\ufffe\001\002\000\004\006\300\001" +
    "\002\000\004\022\301\001\002\000\004\021\uffff\001\002" +
    "\000\004\017\303\001\002\000\004\016\304\001\002\000" +
    "\004\022\305\001\002\000\004\002\uffd4\001\002\000\004" +
    "\005\307\001\002\000\040\011\uffc8\022\uffc8\025\uffc8\026" +
    "\uffc8\027\uffc8\030\uffc8\031\uffc8\032\uffc8\033\uffc8\036\uffc8" +
    "\037\uffc8\040\uffc8\041\uffc8\047\uffc8\050\uffc8\001\002\000" +
    "\004\005\311\001\002\000\040\011\uffca\022\uffca\025\uffca" +
    "\026\uffca\027\uffca\030\uffca\031\uffca\032\uffca\033\uffca\036" +
    "\uffca\037\uffca\040\uffca\041\uffca\047\uffca\050\uffca\001\002" +
    "\000\004\045\313\001\002\000\004\024\314\001\002\000" +
    "\004\046\315\001\002\000\016\011\uffcb\022\uffcb\025\uffcb" +
    "\026\uffcb\047\uffcb\050\uffcb\001\002\000\004\005\317\001" +
    "\002\000\036\011\uffc9\022\uffc9\025\uffc9\026\uffc9\027\uffc9" +
    "\030\uffc9\031\uffc9\032\uffc9\034\uffc9\035\uffc9\047\uffc9\050" +
    "\uffc9\053\uffc9\054\uffc9\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\316\000\006\002\003\004\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\005\020" +
    "\006\010\007\021\010\013\011\011\012\014\032\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\006\027\007\021\010\013\011\011\012\014\032\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\013\031\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\007\050\014\034\015\047\016" +
    "\040\017\037\020\045\021\043\022\035\032\041\001\001" +
    "\000\022\007\050\015\066\016\040\017\037\020\045\021" +
    "\043\022\035\032\041\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\057\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\003\072" +
    "\033\073\041\075\042\077\047\071\055\074\062\070\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\003\072\033" +
    "\073\042\275\047\071\055\074\062\070\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\010\255\016\254\017" +
    "\252\020\257\021\263\023\256\050\253\051\261\052\262" +
    "\053\250\054\251\001\001\000\002\001\001\000\024\016" +
    "\112\017\110\020\120\021\116\040\114\053\117\057\200" +
    "\060\115\061\105\001\001\000\026\007\147\016\150\017" +
    "\146\024\145\025\144\026\160\027\154\030\153\031\152" +
    "\032\155\001\001\000\024\016\112\017\110\020\120\021" +
    "\116\040\114\053\117\057\113\060\115\061\105\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\016\112\017\110\020\120\021\116\040\114\053\117\060" +
    "\121\061\105\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\003\123\056\126\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\007\147\016\150\017\146" +
    "\025\167\026\160\027\154\030\153\031\152\032\155\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\023\164\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\177\001" +
    "\001\000\002\001\001\000\022\016\112\017\110\020\120" +
    "\021\116\040\114\053\117\060\121\061\105\001\001\000" +
    "\006\003\123\056\202\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\044\211\001\001\000\004" +
    "\046\234\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\043\216\045\217\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\043\221\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\010\255\016\254\017\252\020\257\021\263\023\256" +
    "\051\267\052\262\053\250\054\251\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintacticoGXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintacticoGXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintacticoGXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico en la Línea " + s.left +" Columna "+(s.right+1)+ ". Identificador "
        +s.value + " no reconocido." );
    }
         /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico en la Línea " + (s.right+1)+ " Columna "+s.left+". Identificador " +
        s.value + " no reconocido.");   
	}
    



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$sintacticoGXML$actions {
  private final sintacticoGXML parser;

  /** Constructor */
  CUP$sintacticoGXML$actions(sintacticoGXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$sintacticoGXML$do_action_part00000000(
    int                        CUP$sintacticoGXML$act_num,
    java_cup.runtime.lr_parser CUP$sintacticoGXML$parser,
    java.util.Stack            CUP$sintacticoGXML$stack,
    int                        CUP$sintacticoGXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintacticoGXML$result;

      /* select the action based on the action number */
      switch (CUP$sintacticoGXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= S EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)).value;
		RESULT = start_val;
              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$sintacticoGXML$parser.done_parsing();
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // S ::= ETQ_VENTANA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("S",0, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ETQ_CONTENEDOR ::= res_MenorQue res_contenedor ELEMENTOS_CONTENEDOR res_MayorQue LST_ETQS_CONTENEDOR res_MenorQue res_slash res_contenedor res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_CONTENEDOR",9, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // LST_ETQS_CONTENEDOR ::= LST_ETQS_CONTENEDOR ETQS_CONTENEDOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("LST_ETQS_CONTENEDOR",31, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // LST_ETQS_CONTENEDOR ::= ETQS_CONTENEDOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("LST_ETQS_CONTENEDOR",31, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ETQS_CONTENEDOR ::= ETQ_TEXTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQS_CONTENEDOR",32, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ETQS_CONTENEDOR ::= ETQ_CONTROL 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQS_CONTENEDOR",32, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ETQS_CONTENEDOR ::= ETQ_MULTIMEDIA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQS_CONTENEDOR",32, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ETQS_CONTENEDOR ::= ETQ_BOTON 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQS_CONTENEDOR",32, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ETQS_CONTENEDOR ::= ETQ_ENVIAR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQS_CONTENEDOR",32, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ETQ_TEXTO ::= res_MenorQue res_texto ELEMENTOS_TEXTO res_MayorQue tTexto res_MenorQue res_slash res_texto res_MayorQue 
            {
              Object RESULT =null;
		int texleft = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)).left;
		int texright = ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)).right;
		String tex = (String)((java_cup.runtime.Symbol) CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)).value;
		 System.out.println(tex);
              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_TEXTO",1, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ELEMENTOS_TEXTO ::= ELEMENTOS_TEXTO ELEMENTO_TEXTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_TEXTO",18, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ELEMENTOS_TEXTO ::= ELEMENTO_TEXTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_TEXTO",18, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ELEMENTO_TEXTO ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ELEMENTO_TEXTO ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ELEMENTO_TEXTO ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ELEMENTO_TEXTO ::= ELEMENTO_FUENTE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ELEMENTO_TEXTO ::= ELEMENTO_TAM 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // ELEMENTO_TEXTO ::= ELEMENTO_NEGRITA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ELEMENTO_TEXTO ::= ELEMENTO_CURSIVA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ELEMENTO_TEXTO ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TEXTO",19, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ELEMENTO_FUENTE ::= res_fuente res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_FUENTE",20, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ELEMENTO_TAM ::= res_tam res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TAM",21, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ELEMENTO_NEGRITA ::= res_negrita res_Igual BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_NEGRITA",22, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ELEMENTO_CURSIVA ::= res_cursiva res_Igual BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CURSIVA",23, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ETQ_CONTROL ::= res_MenorQue res_control res_MayorQue res_MenorQue ETQ_LISTA_DATOS ETQ_DEFECTO res_slash res_control res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_CONTROL",25, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ELEMENTOS_CONTROL ::= ELEMENTOS_CONTROL ELEMENTO_CONTROL 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_CONTROL",26, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ELEMENTOS_CONTROL ::= ELEMENTO_CONTROL 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_CONTROL",26, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ELEMENTO_CONTROL ::= ELEMENTO_TIPO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ELEMENTO_CONTROL ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ELEMENTO_CONTROL ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ELEMENTO_CONTROL ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ELEMENTO_CONTROL ::= ELEMENTO_ALTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ELEMENTO_CONTROL ::= ELEMENTO_ANCHO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ELEMENTO_CONTROL ::= ELEMENTO_FUENTE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ELEMENTO_CONTROL ::= ELEMENTO_TAM 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ELEMENTO_CONTROL ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ELEMENTO_CONTROL ::= ELEMENTO_NEGRITA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ELEMENTO_CONTROL ::= ELEMENTO_CURSIVA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ELEMENTO_CONTROL ::= ELEMENTO_MAXIMO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ELEMENTO_CONTROL ::= ELEMENTO_MINIMO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ELEMENTO_CONTROL ::= ELEMENTO_ACCION 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTROL",27, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ELEMENTO_MAXIMO ::= res_maximo res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MAXIMO",28, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ELEMENTO_MINIMO ::= res_minimo res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MINIMO",29, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ELEMENTO_ACCION ::= res_accion res_Igual res_llvOpen tTexto res_llvClose 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ACCION",30, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ETQ_VENTANA ::= res_MenorQue res_ventana ELEMENTOS_VENTANA res_MayorQue ETQ_CONTENEDOR res_MenorQue res_slash res_ventana res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_VENTANA",2, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ELEMENTOS_VENTANA ::= ELEMENTOS_VENTANA ELEMENTO_VENTANA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_VENTANA",3, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ELEMENTOS_VENTANA ::= ELEMENTO_VENTANA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_VENTANA",3, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ELEMENTO_VENTANA ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ELEMENTO_VENTANA ::= ELEMENTO_TIPO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ELEMENTO_VENTANA ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ELEMENTO_VENTANA ::= ELEMENTO_ACCION_INICIAL 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ELEMENTO_VENTANA ::= ELEMENTO_ACCION_FINAL 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_VENTANA",4, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ELEMENTO_ACCION_INICIAL ::= res_accionInicial res_Igual res_llvOpen tTexto res_llvClose 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ACCION_INICIAL",7, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ELEMENTO_ACCION_FINAL ::= res_accionFinal res_Igual res_llvOpen tTexto res_llvClose 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ACCION_FINAL",8, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-4)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ELEMENTO_ID ::= res_id res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ID",5, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ELEMENTO_TIPO ::= res_tipo res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_TIPO",6, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ELEMENTO_COLOR ::= res_color res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_COLOR",24, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ELEMENTOS_CONTENEDOR ::= ELEMENTOS_CONTENEDOR ELEMENTO_CONTENEDOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_CONTENEDOR",10, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ELEMENTOS_CONTENEDOR ::= ELEMENTO_CONTENEDOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_CONTENEDOR",10, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ELEMENTO_CONTENEDOR ::= ELEMENTO_ID 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ELEMENTO_CONTENEDOR ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ELEMENTO_CONTENEDOR ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ELEMENTO_CONTENEDOR ::= ELEMENTO_ALTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ELEMENTO_CONTENEDOR ::= ELEMENTO_ANCHO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ELEMENTO_CONTENEDOR ::= ELEMENTO_COLOR 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ELEMENTO_CONTENEDOR ::= ELEMENTO_BORDE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_CONTENEDOR",11, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ELEMENTO_X ::= res_x res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_X",12, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ELEMENTO_Y ::= res_y res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_Y",13, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ELEMENTO_ALTO ::= res_alto res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ALTO",14, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ELEMENTO_ANCHO ::= res_ancho res_Igual tNumerico 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_ANCHO",15, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ELEMENTO_BORDE ::= res_borde res_Igual BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BORDE",16, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // BOOLEANO ::= res_verdadero 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("BOOLEANO",17, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // BOOLEANO ::= res_falso 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("BOOLEANO",17, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // LST_ETQS_DATO ::= LST_ETQS_DATO ETQ_DATO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("LST_ETQS_DATO",35, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // LST_ETQS_DATO ::= ETQ_DATO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("LST_ETQS_DATO",35, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ETQ_DATO ::= res_MenorQue res_dato res_MayorQue tTexto res_MenorQue res_slash res_dato res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_DATO",33, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ETQ_LISTA_DATOS ::= res_MenorQue res_listaDatos res_MayorQue LST_ETQS_DATO res_MenorQue res_slash res_listaDatos res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_LISTA_DATOS",34, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ETQ_DEFECTO ::= res_MenorQue res_defecto res_MayorQue tTexto res_MenorQue res_slash res_defecto res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_DEFECTO",36, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ETQ_MULTIMEDIA ::= res_MenorQue res_multimedia ELEMENTOS_MULTIMEDIA res_MayorQue res_MenorQue res_slash res_multimedia res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_MULTIMEDIA",37, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-7)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ELEMENTOS_MULTIMEDIA ::= ELEMENTOS_MULTIMEDIA ELEMENTO_MULTIMEDIA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_MULTIMEDIA",38, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ELEMENTOS_MULTIMEDIA ::= ELEMENTO_MULTIMEDIA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_MULTIMEDIA",38, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_TIPO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_PATH 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_NOMBRE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_ALTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_ANCHO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ELEMENTO_MULTIMEDIA ::= ELEMENTO_AUTO_REPRODUCCION 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_MULTIMEDIA",39, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ELEMENTO_PATH ::= res_path res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_PATH",40, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ELEMENTO_NOMBRE ::= res_nombre res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_NOMBRE",41, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ELEMENTO_AUTO_REPRODUCCION ::= BOOLEANO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_AUTO_REPRODUCCION",42, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ETQ_BOTON ::= res_MenorQue res_boton ELEMENTOS_BOTON res_MayorQue CONTENIDO_BOTON res_MenorQue res_slash res_boton res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_BOTON",43, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // CONTENIDO_BOTON ::= ETQ_TEXTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("CONTENIDO_BOTON",44, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // CONTENIDO_BOTON ::= tTexto 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("CONTENIDO_BOTON",44, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // ELEMENTOS_BOTON ::= ELEMENTOS_BOTON ELEMENTO_BOTON 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_BOTON",45, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-1)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ELEMENTOS_BOTON ::= ELEMENTO_BOTON 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTOS_BOTON",45, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ELEMENTO_BOTON ::= ELEMENTO_NOMBRE 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // ELEMENTO_BOTON ::= ELEMENTO_X 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // ELEMENTO_BOTON ::= ELEMENTO_Y 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ELEMENTO_BOTON ::= ELEMENTO_ALTO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // ELEMENTO_BOTON ::= ELEMENTO_ANCHO 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // ELEMENTO_BOTON ::= ELEMENTO_REFERENCIA 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // ELEMENTO_BOTON ::= ELEMENTO_ACCION 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_BOTON",46, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ELEMENTO_REFERENCIA ::= res_referencia res_Igual tCad 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ELEMENTO_REFERENCIA",47, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-2)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ETQ_ENVIAR ::= res_MenorQue res_enviar ELEMENTOS_BOTON res_MayorQue CONTENIDO_BOTON res_MenorQue res_slash res_enviar res_MayorQue 
            {
              Object RESULT =null;

              CUP$sintacticoGXML$result = parser.getSymbolFactory().newSymbol("ETQ_ENVIAR",48, ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.elementAt(CUP$sintacticoGXML$top-8)), ((java_cup.runtime.Symbol)CUP$sintacticoGXML$stack.peek()), RESULT);
            }
          return CUP$sintacticoGXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$sintacticoGXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$sintacticoGXML$do_action(
    int                        CUP$sintacticoGXML$act_num,
    java_cup.runtime.lr_parser CUP$sintacticoGXML$parser,
    java.util.Stack            CUP$sintacticoGXML$stack,
    int                        CUP$sintacticoGXML$top)
    throws java.lang.Exception
    {
              return CUP$sintacticoGXML$do_action_part00000000(
                               CUP$sintacticoGXML$act_num,
                               CUP$sintacticoGXML$parser,
                               CUP$sintacticoGXML$stack,
                               CUP$sintacticoGXML$top);
    }
}

}
